<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
				        http://www.springframework.org/schema/security
				        http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">
   
	<security:http auto-config="true" use-expressions="true" access-denied-page="/default/access-denied" >
	    
	  <security:form-login always-use-default-target="true" login-page="/login-form" />
	  
	  <security:logout logout-success-url="/login-form" logout-url="/logout"/>
	  
	  <security:custom-filter ref="requestHeaderFilter" before="FORM_LOGIN_FILTER"/>
	  
<!-- 	  <security:intercept-url pattern="/produtos/**" access="isAuthenticated()" /> -->
	  
	  <security:intercept-url pattern="/produtos/listar" access="hasRole('User') and hasIpAddress('192.168.1.0/24')" />
	  
	  <security:intercept-url pattern="/login-form/**" access="permitAll"/>
	  
	  <security:intercept-url pattern="/*" access="isAuthenticated()" />
	  
	</security:http>
	
	<bean class="br.com.caelum.estoque.authentication.CustomSuccessHandler" id="customSuccessHandler"/>
	
	<bean class="br.com.caelum.estoque.authentication.CustomUsernamePasswordAuthenticationFilter" id="myFilter">
	    <property name="filterProcessesUrl" value="/login" />
	    <property name="authenticationManager" ref="myAuthenticationManager"/>
	</bean>
	
	<bean id="produtoHibernateDAO" class="br.com.caelum.estoque.dao.ProdutoHibernateDAO" />
	
	<bean class="br.com.caelum.estoque.authentication.CustomAuthenticationProvider" id="customAuthenticationProvider"/>

	<security:authentication-manager alias="myAuthenticationManager">
	   <security:authentication-provider user-service-ref="usuarioHibernateDAO" ref="customAuthenticationProvider">
	       <security:password-encoder ref="passwordEncoder"/>
	   </security:authentication-provider>    
	</security:authentication-manager>	

	<bean class="br.com.caelum.estoque.authentication.CustomAbstractAuthenticationProcessingFilter" id="requestHeaderFilter">
	    <property name="filterProcessesUrl" value="/login" />
	    <property name="authenticationManager" ref="myAuthenticationManager"/>
	    <property name="authenticationSuccessHandler" ref="customSuccessHandler"/>
	</bean>

</beans>